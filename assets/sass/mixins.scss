// Mixins

@mixin transition($duration: 0.3s) {
	transition: all $duration !important;
}

@mixin delay($delay: 1s) {
	transition: all $delay !important;
}

@mixin flex-center {
	display: flex;
	justify-content: center;
	align-items: center;
}

@mixin absolute() {
	position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

// Mapa de ángulos
$angles: (
    tl: 135deg,
    tr: 45deg,
    bl: 225deg,
    br: 315deg
);

$directions: (
    lr: 260deg,
    rl: 46deg
);

// Mapa de colores
$colors: (
    negro:          $color-negro,
    gris:           $color-gris,
    blanco:         $color-blanco,

    default:         $color-default,
    primario:        $color-primario,
    secundario:      $color-secundario,

    alt-primario:    $color-alt-primario,
    alt-secundario:  $color-alt-secundario,
    alt-terciario:   $color-alt-terciario,
    alt-quaternario: $color-alt-quaternario
    );


// Mixin para el box-shadow común
@mixin box-shadow($normal-shadow: 0px 14px 23px 0px rgba(0, 0, 0, 0.24), $hover-shadow: 0px 20px 30px 5px #00000025) {
    box-shadow: $normal-shadow;
    &:hover {
        box-shadow: $hover-shadow;
    }    
}    


//COLORES
@mixin colores($color) {
    color: $color;
}


//BUTTONS

// Mixin para aplicar estilos a botones
@mixin button-styles($bg-color, $text-color, $hover-bg-color: $bg-color, $hover-text-color: $text-color) {
    background-color: $bg-color;
    color: $text-color;
    @include transition();
    &:hover, &:active, &.active {
        background-color: $hover-bg-color;
        color: $hover-text-color;
    }
}

// Mixin de botón con degradado
@mixin button-special-styles($angle, $bg-color, $text-color, $hover-bg-color: $bg-color, $hover-text-color: $text-color) {
    background: linear-gradient($angle, transparent 5%, $bg-color 5%);
    color: $text-color;
    @include transition();
    &:hover, &:active, &.active {
        background: linear-gradient($angle, transparent 5%, $hover-bg-color 5%);
        color: $hover-text-color;
    }
}

//mixin para generar un backgroun de un color con semi transparencia
@mixin bg-custom($color) {
    @include absolute;
    background: $color; // Color de fondo para pantallas pequeñas y medianas
    opacity: .4;
    z-index: 2;
}

// Este mixin crea el fondo con un color sólido para pantallas pequeñas y un gradiente para pantallas grandes.
@mixin bg-gradient-custom($direction: 260deg, $start-color: rgba(68, 68, 68, 0.5), $end-color: transparent) {
    @include absolute;
    z-index: 2;
    background: $start-color; // Color de fondo para pantallas pequeñas y medianas

    @media(min-width: $breakpoint-md) {  // $breakpoint-md es 768px
        background: linear-gradient($direction, $start-color 0%, $end-color 66%);
    }
}

//UNDERLINE CON "2 COLORES
@mixin underline-gradient($color1, $color2) {
    position: relative;
    &::after {
        content: "";
        position: absolute;
        left: 0;
        bottom: -3px; // Línea ubicada justo debajo del texto
        width: 30%;
        height: 5px;
        background: linear-gradient(to right, $color1, $color2); // Degradado con los colores recibidos
        z-index: -1;
        clip-path: polygon(0 0, 100% 0, 98% 100%, 0% 100%); // Extremo derecho en diagonal
    }
}

// // Generar clases para cada color y ángulo
// @each $position, $angle in $angles {
//     .btn-especial-#{$position} {
//         @include button-special-styles($bg-color, $text-color, $color-primario, $angle, $hover-bg-color: $bg-color, $hover-text-color: $text-color );
//     }
// }


// Glitch keyframes for rotation/skew
@keyframes glitch {
    1% {
        transform: rotateX(10deg) skewX(90deg);
    }
    2% {
        transform: rotateX(0deg) skewX(0deg);
    }
}

// Noise effects with clip-path for a realistic glitch
@keyframes noise-1 {
    $steps: 30;
    @for $i from 1 through $steps {
        #{percentage($i*(1/$steps))} {
            $top: random(100);
            $bottom: random(101 - $top);
            clip-path: inset(#{$top}px 0 #{$bottom}px 0);
        }
    }
}

@keyframes noise-2 {
    $steps: 30;
    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            $top: random(100);
            $bottom: random(101 - $top);
            clip-path: inset(#{$top}px 0 #{$bottom}px 0);
        }
    }
}

// EFECTO GLITCH ------------------------------------------
// Mixin para efecto glitch
@mixin glitch-effect-mixin($text-shadow-1 : magenta, $text-shadow-2 : $color-alt-secundario) {
    position: relative;
    display: inline-block;
    animation: glitch 5s infinite; // Animación glitch

    // Pseudo-elementos para crear el efecto de desplazamiento
    &::before,
    &::after {
        content: attr(data-text); // Toma el texto del atributo data-text
        position: absolute;
        top: 0;
        left: 0;
        width: 100%; // Asegura que el pseudo-elemento cubra todo el ancho del texto
        height: 100%; // Asegura que cubra toda la altura del texto
        overflow: hidden;
        background: transparent; // Evitar que se vea fondo negro
    }

    &::before {
        left: -2px;
        color: $text-shadow-1 !important; 
        animation: noise-1 3s linear infinite alternate-reverse, glitch 5s infinite;
    }

    &::after {
        left: 2px;
        color: $text-shadow-2 !important;
        animation: noise-2 3s linear infinite alternate-reverse, glitch 5s infinite;
    }
}
